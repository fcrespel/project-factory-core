<!--
  #[
  Project Factory Core Packages
  ##
  Copyright (C) 2013 - 2018 Project Factory team and contributors
  ##
  This program is free software: you can redistribute it and/or modify
  it under the terms of the GNU Affero General Public License as published by
  the Free Software Foundation, either version 3 of the License, or
  (at your option) any later version.
  
  This program is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  GNU General Public License for more details.
  
  You should have received a copy of the GNU Affero General Public License
  along with this program.  If not, see <http://www.gnu.org/licenses/>.
  #]
  -->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

	<modelVersion>4.0.0</modelVersion>
	
	<parent>
		<groupId>fr.project-factory</groupId>
		<artifactId>project-factory-parent</artifactId>
		<version>3.4.0-SNAPSHOT</version>
	</parent>

	<groupId>fr.project-factory.core.packages</groupId>
	<artifactId>packages</artifactId>
	<version>3.4.0-SNAPSHOT</version>
	<packaging>pom</packaging>

	<name>Project Factory Core Packages</name>
	<description>Project Factory Core Packages</description>

	<properties>
		<!-- Project properties -->
		<project.downloaded.directory>${project.build.directory}/downloaded</project.downloaded.directory>
		<project.product.directory>${project.build.directory}/product</project.product.directory>
		<project.system.directory>${project.build.directory}/system</project.system.directory>
		<project.generated.directory>src/generated</project.generated.directory>
		<project.generated.product.directory>${project.generated.directory}/product</project.generated.product.directory>
		<project.generated.properties.directory>${project.generated.directory}/properties</project.generated.properties.directory>
		<project.generated.scripts.directory>${project.generated.directory}/scripts</project.generated.scripts.directory>
		<project.scripts.directory>${project.build.directory}/scripts</project.scripts.directory>
		<project.scripts.rpm.directory>${project.scripts.directory}/rpm</project.scripts.rpm.directory>
		<project.scripts.deb.directory>${project.scripts.directory}/deb</project.scripts.deb.directory>
		<project.app.directory>${project.product.directory}/app/${package.type}/${project.artifactId}</project.app.directory>
		<project.backup.directory>${project.product.directory}/backup/${package.type}/${project.artifactId}</project.backup.directory>
		<project.data.directory>${project.product.directory}/data/${package.type}/${project.artifactId}</project.data.directory>
		<project.log.directory>${project.product.directory}/log/${package.type}/${project.artifactId}</project.log.directory>
		
		<!-- Bundled properties -->
		<properties.default.groupId>fr.project-factory.core.products</properties.default.groupId>
		<properties.default.artifactId>default</properties.default.artifactId>
		<properties.default.version>3.4.0-SNAPSHOT</properties.default.version>
		<properties.default.file>product-default.properties</properties.default.file>
		<properties.system.groupId>${properties.default.groupId}</properties.system.groupId>
		<properties.system.artifactId>${properties.default.artifactId}</properties.system.artifactId>
		<properties.system.version>${properties.default.version}</properties.system.version>
		<properties.system.file>system-el7-x86_64.properties</properties.system.file>
		<properties.product.groupId>${properties.default.groupId}</properties.product.groupId>
		<properties.product.artifactId>${properties.default.artifactId}</properties.product.artifactId>
		<properties.product.version>${properties.default.version}</properties.product.version>
		<properties.product.file>product.properties</properties.product.file>

		<!-- Package properties -->
		<package.name>${package.prefix}-${project.artifactId}</package.name>
		<package.type>generic</package.type>
		<package.arch>noarch</package.arch>
		<package.disabled>false</package.disabled>
		<package.dependencies></package.dependencies>
		<package.dependencies.default>${package.prefix}-core >= 3.4.0</package.dependencies.default>
		<package.rpm.disabled>${package.disabled}</package.rpm.disabled>
		<package.rpm.dependencies>${package.dependencies}</package.rpm.dependencies>
		<package.rpm.dependencies.default>${package.dependencies.default}</package.rpm.dependencies.default>
		<package.rpm.dependencies.all>${package.rpm.dependencies.default}, ${package.rpm.dependencies}</package.rpm.dependencies.all>
		<package.rpm.group>Development/Tools</package.rpm.group>
		<package.rpm.directoryIncluded>false</package.rpm.directoryIncluded>
		<package.deb.disabled>${package.disabled}</package.deb.disabled>
		<package.deb.dependencies>${package.dependencies}</package.deb.dependencies>
		<package.deb.dependencies.default>${package.dependencies.default}</package.deb.dependencies.default>
		<package.deb.dependencies.all>${package.deb.dependencies.default}, ${package.deb.dependencies}</package.deb.dependencies.all>
		<package.deb.group>devel</package.deb.group>
		<package.app>${product.app}/${package.type}/${project.artifactId}</package.app>
		<package.backup>${product.backup}/${package.type}/${project.artifactId}</package.backup>
		<package.data>${product.data}/${package.type}/${project.artifactId}</package.data>
		<package.log>${product.log}/${package.type}/${project.artifactId}</package.log>
		<package.service>${product.id}-${project.artifactId}</package.service>
		<package.user>${product.user}-${project.artifactId}</package.user>
		<package.group>${product.group}</package.group>
		<package.root>${product.root}</package.root>
		<package.bundle.default>fr.project-factory.core.resources:default:3.4.0-SNAPSHOT</package.bundle.default>
		<package.bundle.scripts>fr.project-factory.core.resources:scripts:3.4.0-SNAPSHOT</package.bundle.scripts>
		<package.bundle.tomcat>fr.project-factory.core.resources:tomcat:3.4.0-SNAPSHOT</package.bundle.tomcat>
		<package.src.bundle>${package.bundle.default}</package.src.bundle>
	</properties>

	<modules>
		<module>core</module>
		<module>devel</module>
	</modules>

	<build>
		<finalName>${package.name}-${package.version}-${package.release}.${product.release}.${system.distribution}</finalName>
		<pluginManagement>
			<plugins>
				<!-- CLEAN -->
				<plugin>
					<artifactId>maven-clean-plugin</artifactId>
					<configuration>
						<filesets>
							<fileset>
								<directory>${project.generated.directory}</directory>
							</fileset>
						</filesets>
					</configuration>
				</plugin>
				
				<!-- INITIALIZE -->
				<plugin>
					<groupId>org.kuali.maven.plugins</groupId>
					<artifactId>properties-maven-plugin</artifactId>
					<executions>
						<execution>
							<id>initialize-read-project-properties</id>
							<phase>initialize</phase>
							<goals>
								<goal>read-project-properties</goal>
							</goals>
							<configuration>
								<ignore>package.name,package.version,package.release,package.arch</ignore>
								<locations>
									<location>classpath:${properties.default.file}</location>
									<location>classpath:${properties.system.file}</location>
									<location>classpath:${properties.product.file}</location>
								</locations>
							</configuration>
						</execution>
					</executions>
					<dependencies>
						<dependency>
							<groupId>${properties.product.groupId}</groupId>
							<artifactId>${properties.product.artifactId}</artifactId>
							<version>${properties.product.version}</version>
						</dependency>
						<dependency>
							<groupId>${properties.system.groupId}</groupId>
							<artifactId>${properties.system.artifactId}</artifactId>
							<version>${properties.system.version}</version>
						</dependency>
						<dependency>
							<groupId>${properties.default.groupId}</groupId>
							<artifactId>${properties.default.artifactId}</artifactId>
							<version>${properties.default.version}</version>
						</dependency>
					</dependencies>
				</plugin>
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>build-helper-maven-plugin</artifactId>
					<executions>
						<execution>
							<id>initialize-regex-properties</id>
							<phase>initialize</phase>
							<goals>
								<goal>regex-properties</goal>
							</goals>
							<configuration>
								<regexPropertySettings>
									<regexPropertySetting>
										<name>package.version</name>
										<value>${project.version}</value>
										<regex>^([^-]*)-((?!SNAPSHOT).*?)(?:-SNAPSHOT)?$</regex>
										<replacement>$$1</replacement>
										<failIfNoMatch>true</failIfNoMatch>
									</regexPropertySetting>
									<regexPropertySetting>
										<name>package.release</name>
										<value>${project.version}</value>
										<regex>^([^-]*)-((?!SNAPSHOT).*?)(?:-SNAPSHOT)?$</regex>
										<replacement>$$2</replacement>
										<failIfNoMatch>true</failIfNoMatch>
									</regexPropertySetting>
									<regexPropertySetting>
										<name>package.rpm.dependencies.all.fixed</name>
										<value>${package.rpm.dependencies.all}</value>
										<regex>(?:^\s*,)|(?:[\r\n\t])|(?:,\s*$)</regex>
										<replacement></replacement>
										<failIfNoMatch>false</failIfNoMatch>
									</regexPropertySetting>
									<regexPropertySetting>
										<name>package.rpm.arch</name>
										<value>${package.arch}</value>
										<regex>^(noarch|all)$</regex>
										<replacement>noarch</replacement>
										<failIfNoMatch>false</failIfNoMatch>
									</regexPropertySetting>
									<regexPropertySetting>
										<name>package.deb.dependencies.all.fixed</name>
										<value>${package.deb.dependencies.all}</value>
										<regex>(?:^\s*,)|(?:[\r\n\t])|(?:,\s*$)</regex>
										<replacement></replacement>
										<failIfNoMatch>false</failIfNoMatch>
									</regexPropertySetting>
									<regexPropertySetting>
										<name>package.deb.arch</name>
										<value>${package.arch}</value>
										<regex>^(noarch|all)$</regex>
										<replacement>all</replacement>
										<failIfNoMatch>false</failIfNoMatch>
									</regexPropertySetting>
								</regexPropertySettings>
							</configuration>
						</execution>
						<execution>
							<id>initialize-regex-properties-fix</id>
							<phase>initialize</phase>
							<goals>
								<goal>regex-properties</goal>
							</goals>
							<configuration>
								<regexPropertySettings>
									<regexPropertySetting>
										<name>package.deb.dependencies.all.fixed</name>
										<value>${package.deb.dependencies.all.fixed}</value>
										<regex>( +)((?:&gt;=|=|&lt;=)[ 0-9.-]+)</regex>
										<replacement>$$1($$2)</replacement>
										<failIfNoMatch>false</failIfNoMatch>
									</regexPropertySetting>
								</regexPropertySettings>
							</configuration>
						</execution>
					</executions>
				</plugin>
				
				<!-- GENERATE RESOURCES -->
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>wagon-maven-plugin</artifactId>
					<executions>
						<execution>
							<id>generate-resources-download</id>
							<phase>generate-resources</phase>
							<goals>
								<goal>download-single</goal>
							</goals>
							<configuration>
								<skip>${package.disabled}</skip>
								<url>${package.src.url}</url>
								<fromFile>${package.src.file}</fromFile>
								<toDir>${project.downloaded.directory}</toDir>
							</configuration>
						</execution>
					</executions>
				</plugin>
				<plugin>
					<artifactId>maven-remote-resources-plugin</artifactId>
					<executions>
						<execution>
							<id>generate-resources-process-bundle</id>
							<phase>generate-resources</phase>
							<goals>
								<goal>process</goal>
							</goals>
							<configuration>
								<outputDirectory>${project.generated.directory}</outputDirectory>
								<resourceBundles>
									<resourceBundle>${package.src.bundle}</resourceBundle>
									<resourceBundle>${package.bundle.scripts}</resourceBundle>
								</resourceBundles>
								<includeProjectProperties>true</includeProjectProperties>
								<properties>
									<groupId>${project.groupId}</groupId>
									<artifactId>${project.artifactId}</artifactId>
									<version>${project.version}</version>
								</properties>
							</configuration>
						</execution>
					</executions>
				</plugin>
				
				<!-- COMPILE -->
				<plugin>
					<artifactId>maven-compiler-plugin</artifactId>
					<executions>
						<execution>
							<id>default-compile</id>
							<phase>compile</phase>
							<goals>
								<goal>compile</goal>
							</goals>
						</execution>
					</executions>
				</plugin>
				
				<!-- PROCESS CLASSES -->
				<plugin>
					<artifactId>maven-war-plugin</artifactId>
					<executions>
						<execution>
							<id>process-classes-war-exploded</id>
							<phase>process-classes</phase>
							<goals>
								<goal>exploded</goal>
							</goals>
							<configuration>
								<webappDirectory>${project.app.directory}/webapps/${project.artifactId}</webappDirectory>
							</configuration>
						</execution>
					</executions>
				</plugin>
				
				<!-- PREPARE PACKAGE -->
				<plugin>
					<artifactId>maven-resources-plugin</artifactId>
					<executions>
						<execution>
							<id>prepare-package-scripts</id>
							<phase>prepare-package</phase>
							<goals>
								<goal>copy-resources</goal>
							</goals>
							<configuration>
								<outputDirectory>${project.scripts.directory}</outputDirectory>
								<overwrite>true</overwrite>
								<useDefaultDelimiters>false</useDefaultDelimiters>
								<delimiters>
									<delimiter>@{*}</delimiter>
								</delimiters>
								<resources>
									<resource>
										<directory>${project.generated.scripts.directory}</directory>
										<filtering>true</filtering>
										<excludes>
											<exclude>**/*.vm</exclude>
											<exclude>build.xml</exclude>
										</excludes>
									</resource>
									<resource>
										<directory>${project.generated.scripts.directory}</directory>
										<filtering>false</filtering>
										<includes>
											<include>build.xml</include>
										</includes>
									</resource>
									<resource>
										<directory>${project.scripts.directory}/processed</directory>
										<filtering>true</filtering>
										<excludes>
											<exclude>build.xml</exclude>
										</excludes>
									</resource>
									<resource>
										<directory>${project.scripts.directory}/processed</directory>
										<filtering>false</filtering>
										<includes>
											<include>build.xml</include>
										</includes>
									</resource>
									<resource>
										<directory>src/main/scripts</directory>
										<filtering>true</filtering>
										<excludes>
											<exclude>build.xml</exclude>
										</excludes>
									</resource>
									<resource>
										<directory>src/main/scripts</directory>
										<filtering>false</filtering>
										<includes>
											<include>build.xml</include>
										</includes>
									</resource>
								</resources>
							</configuration>
						</execution>
					</executions>
				</plugin>
				
				<!-- PACKAGE -->
				<plugin>
					<artifactId>maven-antrun-plugin</artifactId>
					<executions>
						<execution>
							<id>package-antrun-install</id>
							<phase>package</phase>
							<goals>
								<goal>run</goal>
							</goals>
							<configuration>
								<skip>${package.disabled}</skip>
								<target>
									<taskdef resource="net/sf/antcontrib/antlib.xml" classpathref="maven.plugin.classpath" />
									<if>
										<available file="${project.scripts.directory}/build.xml" />
										<then>
											<ant dir="${project.scripts.directory}" antfile="build.xml" target="install" />
										</then>
									</if>
								</target>
							</configuration>
						</execution>
					</executions>
				</plugin>
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>rpm-maven-plugin</artifactId>
					<executions>
						<execution>
							<id>package-rpm</id>
							<phase>package</phase>
							<goals>
								<goal>attached-rpm</goal>
							</goals>
							<configuration>
								<name>${package.name}</name>
								<projversion>${package.version}</projversion>
								<release>${package.release}.${product.release}.${system.distribution}</release>
								<needarch>${package.rpm.arch}</needarch>
								<distribution>${product.name}</distribution>
								<targetVendor>pf</targetVendor>
								<packager>${package.maintainer}</packager>
								<group>${package.rpm.group}</group>
								<autoRequires>false</autoRequires>
								<autoProvides>false</autoProvides>
								<classifier>${package.classifier}</classifier>
								<disabled>${package.rpm.disabled}</disabled>
								<defaultUsername>${package.user}</defaultUsername>
								<defaultGroupname>${package.group}</defaultGroupname>
								<defineStatements>
									<defineStatement>_binaries_in_noarch_packages_terminate_build 0</defineStatement>
									<defineStatement>_unpackaged_files_terminate_build 0</defineStatement>
								</defineStatements>
								<requires>
									<require>${package.rpm.dependencies.all.fixed}</require>
								</requires>
								<mappings></mappings>
								<preinstallScriptlet>
									<scriptFile>${project.scripts.rpm.directory}/preinst</scriptFile>
								</preinstallScriptlet>
								<postinstallScriptlet>
									<scriptFile>${project.scripts.rpm.directory}/postinst</scriptFile>
								</postinstallScriptlet>
								<preremoveScriptlet>
									<scriptFile>${project.scripts.rpm.directory}/prerm</scriptFile>
								</preremoveScriptlet>
								<postremoveScriptlet>
									<scriptFile>${project.scripts.rpm.directory}/postrm</scriptFile>
								</postremoveScriptlet>
							</configuration>
						</execution>
					</executions>
				</plugin>
				<plugin>
					<groupId>org.vafer</groupId>
					<artifactId>jdeb</artifactId>
					<executions>
						<execution>
							<id>package-deb</id>
							<phase>package</phase>
							<goals>
								<goal>jdeb</goal>
							</goals>
							<configuration>
								<skip>${package.deb.disabled}</skip>
								<skipPOMs>false</skipPOMs>
								<deb>${project.build.directory}/${package.name}_${package.version}-${package.release}.${product.release}.${system.distribution}_${package.arch}.deb</deb>
								<changesOut>${project.build.directory}/${package.name}_${package.version}-${package.release}.${product.release}.${system.distribution}_${package.arch}.changes</changesOut>
								<controlDir>${project.scripts.deb.directory}</controlDir>
								<attach>true</attach>
								<classifier>${package.classifier}</classifier>
								<verbose>false</verbose>
							</configuration>
						</execution>
					</executions>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>

	<profiles>
		<profile>
			<id>process-source</id>
			<activation>
				<file>
					<exists>src/main</exists>
				</file>
			</activation>
			<build>
				<plugins>
					<plugin>
						<groupId>org.kuali.maven.plugins</groupId>
						<artifactId>properties-maven-plugin</artifactId>
					</plugin>
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>build-helper-maven-plugin</artifactId>
					</plugin>
					<plugin>
						<artifactId>maven-resources-plugin</artifactId>
					</plugin>
					<plugin>
						<artifactId>maven-remote-resources-plugin</artifactId>
					</plugin>
					<plugin>
						<artifactId>maven-antrun-plugin</artifactId>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>process-java</id>
			<activation>
				<file>
					<exists>src/main/java</exists>
				</file>
			</activation>
			<build>
				<plugins>
					<plugin>
						<artifactId>maven-compiler-plugin</artifactId>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>process-product</id>
			<activation>
				<file>
					<exists>src/main/product</exists>
				</file>
			</activation>
			<build>
				<pluginManagement>
					<plugins>
						<plugin>
							<groupId>org.codehaus.mojo</groupId>
							<artifactId>rpm-maven-plugin</artifactId>
							<executions>
								<execution>
									<id>package-rpm</id>
									<configuration>
										<mappings combine.children="append">
											<mapping>
												<directory>${product.app}</directory>
												<directoryIncluded>${package.rpm.directoryIncluded}</directoryIncluded>
												<sources>
													<source>
														<location>${project.product.directory}/app</location>
														<noDefaultExcludes>true</noDefaultExcludes>
													</source>
												</sources>
											</mapping>
											<mapping>
												<directory>${product.backup}</directory>
												<directoryIncluded>${package.rpm.directoryIncluded}</directoryIncluded>
												<sources>
													<source>
														<location>${project.product.directory}/backup</location>
														<noDefaultExcludes>true</noDefaultExcludes>
													</source>
												</sources>
											</mapping>
											<mapping>
												<directory>${product.bin}</directory>
												<directoryIncluded>${package.rpm.directoryIncluded}</directoryIncluded>
												<sources>
													<source>
														<location>${project.product.directory}/bin</location>
														<noDefaultExcludes>true</noDefaultExcludes>
													</source>
												</sources>
											</mapping>
											<mapping>
												<directory>${product.data}</directory>
												<directoryIncluded>${package.rpm.directoryIncluded}</directoryIncluded>
												<configuration>noreplace</configuration>
												<sources>
													<source>
														<location>${project.product.directory}/data</location>
														<noDefaultExcludes>true</noDefaultExcludes>
													</source>
												</sources>
											</mapping>
											<mapping>
												<directory>${product.log}</directory>
												<directoryIncluded>${package.rpm.directoryIncluded}</directoryIncluded>
												<sources>
													<source>
														<location>${project.product.directory}/log</location>
														<noDefaultExcludes>true</noDefaultExcludes>
													</source>
												</sources>
											</mapping>
										</mappings>
									</configuration>
								</execution>
							</executions>
						</plugin>
						<plugin>
							<groupId>org.vafer</groupId>
							<artifactId>jdeb</artifactId>
							<executions>
								<execution>
									<id>package-deb</id>
									<configuration>
										<dataSet combine.children="append">
											<data>
												<src>${project.product.directory}/app</src>
												<type>directory</type>
												<excludes>**/*.sh</excludes>
												<mapper>
													<type>perm</type>
													<prefix>${product.app}</prefix>
													<user>${package.user}</user>
													<group>${package.group}</group>
												</mapper>
											</data>
											<data>
												<src>${project.product.directory}/app</src>
												<type>directory</type>
												<includes>**/*.sh</includes>
												<mapper>
													<type>perm</type>
													<prefix>${product.app}</prefix>
													<user>${package.user}</user>
													<group>${package.group}</group>
													<filemode>755</filemode>
												</mapper>
											</data>
											<data>
												<src>${project.product.directory}/backup</src>
												<type>directory</type>
												<mapper>
													<type>perm</type>
													<prefix>${product.backup}</prefix>
													<user>${package.user}</user>
													<group>${package.group}</group>
												</mapper>
											</data>
											<data>
												<src>${project.product.directory}/bin</src>
												<type>directory</type>
												<excludes>**/*.sh</excludes>
												<mapper>
													<type>perm</type>
													<prefix>${product.bin}</prefix>
													<user>${package.user}</user>
													<group>${package.group}</group>
												</mapper>
											</data>
											<data>
												<src>${project.product.directory}/bin</src>
												<type>directory</type>
												<includes>**/*.sh</includes>
												<mapper>
													<type>perm</type>
													<prefix>${product.bin}</prefix>
													<user>${package.user}</user>
													<group>${package.group}</group>
													<filemode>755</filemode>
												</mapper>
											</data>
											<data>
												<src>${project.product.directory}/data</src>
												<type>directory</type>
												<conffile>true</conffile>
												<mapper>
													<type>perm</type>
													<prefix>${product.data}</prefix>
													<user>${package.user}</user>
													<group>${package.group}</group>
												</mapper>
											</data>
											<data>
												<src>${project.product.directory}/log</src>
												<type>directory</type>
												<mapper>
													<type>perm</type>
													<prefix>${product.log}</prefix>
													<user>${package.user}</user>
													<group>${package.group}</group>
												</mapper>
											</data>
										</dataSet>
									</configuration>
								</execution>
							</executions>
						</plugin>
					</plugins>
				</pluginManagement>
				<plugins>
					<plugin>
						<artifactId>maven-resources-plugin</artifactId>
						<executions>
							<execution>
								<id>prepare-package-product-utf8</id>
								<phase>prepare-package</phase>
								<goals>
									<goal>copy-resources</goal>
								</goals>
								<configuration>
									<outputDirectory>${project.product.directory}</outputDirectory>
									<encoding>UTF-8</encoding>
									<overwrite>true</overwrite>
									<includeEmptyDirs>true</includeEmptyDirs>
									<useDefaultDelimiters>false</useDefaultDelimiters>
									<delimiters>
										<delimiter>@{*}</delimiter>
									</delimiters>
									<nonFilteredFileExtensions>
										<nonFilteredFileExtension>flag</nonFilteredFileExtension>
										<nonFilteredFileExtension>pdf</nonFilteredFileExtension>
										<nonFilteredFileExtension>swf</nonFilteredFileExtension>
										<nonFilteredFileExtension>jar</nonFilteredFileExtension>
										<nonFilteredFileExtension>zip</nonFilteredFileExtension>
										<nonFilteredFileExtension>hpi</nonFilteredFileExtension>
										<nonFilteredFileExtension>jpi</nonFilteredFileExtension>
										<nonFilteredFileExtension>class</nonFilteredFileExtension>
										<nonFilteredFileExtension>mo</nonFilteredFileExtension>
									</nonFilteredFileExtensions>
									<resources>
										<resource>
											<directory>${project.generated.product.directory}</directory>
											<filtering>true</filtering>
											<excludes>
												<exclude>**/*.properties</exclude>
												<exclude>**/*.gitkeep</exclude>
											</excludes>
										</resource>
										<resource>
											<directory>src/main/product</directory>
											<filtering>true</filtering>
											<excludes>
												<exclude>**/*.vm</exclude>
												<exclude>**/*.properties</exclude>
												<exclude>**/*.gitkeep</exclude>
											</excludes>
										</resource>
									</resources>
								</configuration>
							</execution>
							<execution>
								<id>prepare-package-product-iso8859</id>
								<phase>prepare-package</phase>
								<goals>
									<goal>copy-resources</goal>
								</goals>
								<configuration>
									<outputDirectory>${project.generated.properties.directory}</outputDirectory>
									<encoding>ISO-8859-1</encoding>
									<overwrite>true</overwrite>
									<includeEmptyDirs>true</includeEmptyDirs>
									<useDefaultDelimiters>false</useDefaultDelimiters>
									<delimiters>
										<delimiter>@{*}</delimiter>
									</delimiters>
									<resources>
										<resource>
											<directory>${project.generated.product.directory}</directory>
											<filtering>true</filtering>
											<includes>
												<include>**/*.properties</include>
											</includes>
										</resource>
										<resource>
											<directory>src/main/product</directory>
											<filtering>true</filtering>
											<includes>
												<include>**/*.properties</include>
											</includes>
										</resource>
									</resources>
								</configuration>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>com.github.vdubus</groupId>
						<artifactId>velocity-maven-plugin</artifactId>
						<executions>
							<execution>
								<id>prepare-package-product-velocity</id>
								<phase>prepare-package</phase>
								<goals>
									<goal>velocity</goal>
								</goals>
								<configuration>
									<outputDirectory>${project.product.directory}</outputDirectory>
									<removeExtension>.vm</removeExtension>
									<templateFiles>
										<directory>src/main/product</directory>
										<includes>
											<include>**/*.vm</include>
										</includes>
									</templateFiles>
								</configuration>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>native2ascii-maven-plugin</artifactId>
						<executions>
							<execution>
								<id>prepare-package-product-native2ascii</id>
								<phase>prepare-package</phase>
								<goals>
									<goal>resources</goal>
								</goals>
								<configuration>
									<srcDir>${project.generated.properties.directory}</srcDir>
									<targetDir>${project.product.directory}</targetDir>
									<encoding>ISO-8859-1</encoding>
									<includes>
										<include>**/*.properties</include>
									</includes>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>process-system</id>
			<activation>
				<file>
					<exists>src/main/system</exists>
				</file>
			</activation>
			<build>
				<pluginManagement>
					<plugins>
						<plugin>
							<groupId>org.codehaus.mojo</groupId>
							<artifactId>rpm-maven-plugin</artifactId>
							<executions>
								<execution>
									<id>package-rpm</id>
									<configuration>
										<mappings combine.children="append">
											<mapping>
												<directory>/</directory>
												<directoryIncluded>${package.rpm.directoryIncluded}</directoryIncluded>
												<sources>
													<source>
														<location>${project.system.directory}</location>
														<noDefaultExcludes>true</noDefaultExcludes>
													</source>
												</sources>
											</mapping>
										</mappings>
									</configuration>
								</execution>
							</executions>
						</plugin>
						<plugin>
							<groupId>org.vafer</groupId>
							<artifactId>jdeb</artifactId>
							<executions>
								<execution>
									<id>package-deb</id>
									<configuration>
										<dataSet combine.children="append">
											<data>
												<src>${project.system.directory}</src>
												<type>directory</type>
												<mapper>
													<type>perm</type>
													<user>${package.user}</user>
													<group>${package.group}</group>
												</mapper>
											</data>
										</dataSet>
									</configuration>
								</execution>
							</executions>
						</plugin>
					</plugins>
				</pluginManagement>
				<plugins>
					<plugin>
						<artifactId>maven-resources-plugin</artifactId>
						<executions>
							<execution>
								<id>prepare-package-system-utf8</id>
								<phase>prepare-package</phase>
								<goals>
									<goal>copy-resources</goal>
								</goals>
								<configuration>
									<outputDirectory>${project.system.directory}</outputDirectory>
									<encoding>UTF-8</encoding>
									<overwrite>true</overwrite>
									<includeEmptyDirs>true</includeEmptyDirs>
									<useDefaultDelimiters>false</useDefaultDelimiters>
									<delimiters>
										<delimiter>@{*}</delimiter>
									</delimiters>
									<nonFilteredFileExtensions>
										<nonFilteredFileExtension>flag</nonFilteredFileExtension>
										<nonFilteredFileExtension>pdf</nonFilteredFileExtension>
										<nonFilteredFileExtension>swf</nonFilteredFileExtension>
										<nonFilteredFileExtension>jar</nonFilteredFileExtension>
										<nonFilteredFileExtension>zip</nonFilteredFileExtension>
										<nonFilteredFileExtension>hpi</nonFilteredFileExtension>
										<nonFilteredFileExtension>jpi</nonFilteredFileExtension>
										<nonFilteredFileExtension>class</nonFilteredFileExtension>
										<nonFilteredFileExtension>mo</nonFilteredFileExtension>
									</nonFilteredFileExtensions>
									<resources>
										<resource>
											<directory>src/main/system</directory>
											<filtering>true</filtering>
											<excludes>
												<exclude>**/*.vm</exclude>
												<exclude>**/*.properties</exclude>
												<exclude>**/*.gitkeep</exclude>
											</excludes>
										</resource>
									</resources>
								</configuration>
							</execution>
							<execution>
								<id>prepare-package-system-iso8859</id>
								<phase>prepare-package</phase>
								<goals>
									<goal>copy-resources</goal>
								</goals>
								<configuration>
									<outputDirectory>${project.system.directory}</outputDirectory>
									<encoding>ISO-8859-1</encoding>
									<overwrite>true</overwrite>
									<includeEmptyDirs>true</includeEmptyDirs>
									<useDefaultDelimiters>false</useDefaultDelimiters>
									<delimiters>
										<delimiter>@{*}</delimiter>
									</delimiters>
									<resources>
										<resource>
											<directory>src/main/system</directory>
											<filtering>true</filtering>
											<includes>
												<include>**/*.properties</include>
											</includes>
										</resource>
									</resources>
								</configuration>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>com.github.vdubus</groupId>
						<artifactId>velocity-maven-plugin</artifactId>
						<executions>
							<execution>
								<id>prepare-package-system-velocity</id>
								<phase>prepare-package</phase>
								<goals>
									<goal>velocity</goal>
								</goals>
								<configuration>
									<outputDirectory>${project.system.directory}</outputDirectory>
									<removeExtension>.vm</removeExtension>
									<templateFiles>
										<directory>src/main/system</directory>
										<includes>
											<include>**/*.vm</include>
										</includes>
									</templateFiles>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>process-scripts</id>
			<activation>
				<file>
					<exists>src/main/scripts</exists>
				</file>
			</activation>
			<build>
				<plugins>
					<plugin>
						<groupId>com.github.vdubus</groupId>
						<artifactId>velocity-maven-plugin</artifactId>
						<executions>
							<execution>
								<id>process-resources-scripts-velocity</id>
								<phase>process-resources</phase>
								<goals>
									<goal>velocity</goal>
								</goals>
								<configuration>
									<outputDirectory>${project.scripts.directory}/processed</outputDirectory>
									<removeExtension>.vm</removeExtension>
									<templateFiles>
										<directory>${project.generated.scripts.directory}</directory>
										<includes>
											<include>**/*.vm</include>
										</includes>
									</templateFiles>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>sign-package</id>
			<activation>
				<property>
					<name>package.key.name</name>
				</property>
			</activation>
			<build>
				<pluginManagement>
					<plugins>
						<plugin>
							<groupId>org.codehaus.mojo</groupId>
							<artifactId>rpm-maven-plugin</artifactId>
							<executions>
								<execution>
									<id>package-rpm</id>
									<configuration>
										<keyname>${package.key.name}</keyname>
										<keyPassphrase>
											<passphrase>${package.key.passphrase}</passphrase>
										</keyPassphrase>
									</configuration>
								</execution>
							</executions>
						</plugin>
						<plugin>
							<groupId>org.vafer</groupId>
							<artifactId>jdeb</artifactId>
							<executions>
								<execution>
									<id>package-deb</id>
									<configuration>
										<signPackage>true</signPackage>
										<key>${package.key.name}</key>
										<passphrase>${package.key.passphrase}</passphrase>
									</configuration>
								</execution>
							</executions>
						</plugin>
					</plugins>
				</pluginManagement>
			</build>
		</profile>
		<profile>
			<id>rpm</id>
			<activation>
				<file>
					<exists>src/main</exists>
				</file>
			</activation>
			<build>
				<plugins>
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>rpm-maven-plugin</artifactId>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>deb</id>
			<activation>
				<file>
					<exists>src/main</exists>
				</file>
			</activation>
			<build>
				<plugins>
					<plugin>
						<groupId>org.vafer</groupId>
						<artifactId>jdeb</artifactId>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>

</project>
