#!/bin/bash

[ "$1" = "install" -o "$1" = "upgrade" ] || exit 0
[ -e "@{product.bin}/loadenv.sh" ] && source "@{product.bin}/loadenv.sh"

# Log start
INSTALL_LOG="@{product.log}/system/core/install.log"
echo "[$(date --rfc-3339=seconds)] @{package.name}-@{package.version}-@{package.release}.@{product.release}.@{system.distribution} preinstall start" >> "$INSTALL_LOG"

# Create user/group
getent group "@{package.group}" >/dev/null || groupadd -r "@{package.group}"
getent passwd "@{package.user}" >/dev/null || if [ "@{package.user}" = "@{product.user}" ]; then
	mkdir -p `dirname "@{package.root}"`
	useradd -g "@{package.group}" -d "@{package.root}" -c "@{product.name}" -s /bin/bash -m -r "@{package.user}"
else
	useradd -g "@{package.group}" -d "@{package.root}" -c "@{product.name} @{project.artifactId}" -s /sbin/nologin -M -r "@{package.user}"
fi

# Execute script
SCRIPT_OUTPUT=`mktemp`
(
	: # Package install/upgrade
\#include( "src/main/scripts/preinstall.sh" )
) > "$SCRIPT_OUTPUT" 2>&1

# Handle script result
SCRIPT_RET=$?
if [ $SCRIPT_RET -ne 0 ]; then
	cat "$SCRIPT_OUTPUT" | tee -a "$INSTALL_LOG"
	rm -f "$SCRIPT_OUTPUT"
	echo "[$(date --rfc-3339=seconds)] @{package.name}-@{package.version}-@{package.release}.@{product.release}.@{system.distribution} preinstall failure" >> "$INSTALL_LOG"
else
	cat "$SCRIPT_OUTPUT" >> "$INSTALL_LOG"
	rm -f "$SCRIPT_OUTPUT"
	echo "[$(date --rfc-3339=seconds)] @{package.name}-@{package.version}-@{package.release}.@{product.release}.@{system.distribution} preinstall success" >> "$INSTALL_LOG"
fi
exit $SCRIPT_RET
